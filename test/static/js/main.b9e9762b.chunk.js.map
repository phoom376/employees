{"version":3,"sources":["logo.svg","App.js","reportWebVitals.js","index.js"],"names":["App","useState","name","setName","age","setAge","position","setPosition","country","setCountry","wage","setWage","employeesList","setEmployeesList","message","setMessage","showemployees","Axios","get","then","response","data","setInterval","className","action","htmlFor","type","id","placeholder","required","onChange","event","target","value","onClick","post","map","val","key","status","style","width","emp_name","emp_age","emp_position","emp_country","emp_wage","emp_id","delete","filter","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iNAAe,I,4BC8IAA,MAzIf,WAEE,MAAuBC,mBAAS,IAAhC,mBAAOC,EAAP,KAAYC,EAAZ,KACA,EAAqBF,mBAAS,GAA9B,mBAAOG,EAAP,KAAWC,EAAX,KACA,EAA+BJ,mBAAS,IAAxC,mBAAOK,EAAP,KAAgBC,EAAhB,KACA,EAA6BN,mBAAS,IAAtC,mBAAOO,EAAP,KAAeC,EAAf,KACA,EAAuBR,mBAAS,GAAhC,mBAAOS,EAAP,KAAYC,EAAZ,KACA,EAAyCV,mBAAS,IAAlD,mBAAOW,EAAP,KAAqBC,EAArB,KACA,EAA6BZ,mBAAS,IAAtC,mBAAOa,EAAP,KAAeC,EAAf,KAEMC,EAAgB,WACpBC,IAAMC,IAAI,mCAAmCC,MAAK,SAACC,GACjDP,EAAiBO,EAASC,MAC1BN,EAAWK,EAASC,KAAKP,aAuC7B,OALDQ,aAAY,WACTN,MACC,KAID,sBAAKO,UAAU,gBAAf,UAEE,gDAEA,uBAAMC,OAAO,GAAb,UAEE,sBAAKD,UAAU,MAAf,UACA,uBAAOE,QAAQ,OAAOF,UAAU,aAAhC,mBACA,uBAAOG,KAAK,OAAOC,GAAG,OAAOJ,UAAU,eAAeK,YAAY,aAAaC,UAAQ,EAACC,SAAU,SAACC,GACjG5B,EAAQ4B,EAAMC,OAAOC,aAIvB,sBAAKV,UAAU,MAAf,UACA,uBAAOE,QAAQ,MAAMF,UAAU,aAA/B,kBACA,uBAAOG,KAAK,SAASC,GAAG,MAAMJ,UAAU,eAAeK,YAAY,YAAYC,UAAQ,EAACC,SAAW,SAAAC,GACjG1B,EAAO0B,EAAMC,OAAOC,aAItB,sBAAKV,UAAU,MAAf,UACA,uBAAOE,QAAQ,WAAWF,UAAU,aAApC,sBACA,uBAAOG,KAAK,OAAOC,GAAG,SAASJ,UAAU,eAAeK,YAAY,iBAAiBC,UAAQ,EAACC,SAAU,SAACC,GAAD,OACxGxB,EAAYwB,EAAMC,OAAOC,aAIzB,sBAAKV,UAAU,MAAf,UACA,uBAAOE,QAAQ,UAAUF,UAAU,aAAnC,sBACA,uBAAOG,KAAK,OAAOC,GAAG,UAAUJ,UAAU,eAAeK,YAAY,gBAAgBC,UAAQ,EAACC,SAAU,SAACC,GACvGtB,EAAWsB,EAAMC,OAAOC,aAI1B,sBAAKV,UAAU,MAAf,UACA,uBAAOE,QAAQ,OAAOF,UAAU,aAAhC,mBACA,uBAAOG,KAAK,SAASC,GAAG,OAAOJ,UAAU,eAAeK,YAAY,aAAaC,UAAQ,EAACC,SAAU,SAACC,GACnGpB,EAAQoB,EAAMC,OAAOC,aAGvB,uBACA,wBAAQV,UAAU,kBAAkBW,QA7ErB,WACnBjB,IAAMkB,KAAK,oCAAoC,CAC7CjC,KAAKA,EACLE,IAAIA,EACJE,SAASA,EACTE,QAAQA,EACRE,KAAKA,IACJS,MAAK,WACNN,EAAiB,GAAD,mBACXD,GADW,CACG,CACfV,KAAKA,EACLE,IAAIA,EACJE,SAASA,EACTE,QAAQA,EACRE,KAAKA,UA+DP,6BAGA,uBACF,wBAAQa,UAAU,kBAAkBW,QAASlB,EAA7C,4BACA,uBACA,uBAGA,6BAAKF,IACFF,EAAcwB,KAAI,SAACC,EAAIC,GACtB,OAAkB,IAAfD,EAAIE,OAEH,qBAAKhB,UAAU,YAAf,SACE,6BAAKT,MAKP,sBAAKS,UAAU,YAAf,UACI,qBAAKA,UAAU,OAAOiB,MAAO,CAACC,MAAM,SAApC,SACE,sBAAKlB,UAAU,YAAf,UACE,oBAAGA,UAAU,YAAb,mBAAgCc,EAAIK,YACpC,oBAAGnB,UAAU,YAAb,kBAA+Bc,EAAIM,WACnC,oBAAGpB,UAAU,YAAb,uBAAoCc,EAAIO,gBACxC,oBAAGrB,UAAU,YAAb,sBAAmCc,EAAIQ,eACvC,oBAAGtB,UAAU,YAAb,mBAAgCc,EAAIS,YACpC,wBAAQvB,UAAU,iBAAiBW,SApFhCP,EAoFuDU,EAAIU,YAnFhF9B,IAAM+B,OAAN,+CAAqDrB,IAAMR,MAAK,WAC9DN,EACED,EAAcqC,QAAO,SAACZ,GACpB,OAAOA,EAAIV,KAAOA,UAgFN,yBAIJ,uBACI,0BAzFE,IAACA,SC9BVuB,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBjC,MAAK,YAAkD,IAA/CkC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1BZ,M","file":"static/js/main.b9e9762b.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/logo.6ce24c58.svg\";","import logo from './logo.svg';\nimport './App.css';\nimport {useState} from 'react';\nimport Axios from 'axios';\n\nfunction App() {\n\n  const [name,setName] = useState('');\n  const [age,setAge] = useState(0);\n  const [position,setPosition] = useState('');\n  const [country,setCountry] = useState('');\n  const [wage,setWage] = useState(0);\n  const [employeesList,setEmployeesList] = useState([]);\n  const [message,setMessage] = useState('');\n\n  const showemployees = () => {\n    Axios.get('http://localhost:3001/employees').then((response)=>{\n      setEmployeesList(response.data);\n      setMessage(response.data.message);\n    })\n  }\n\n  const addemployees = () => {\n    Axios.post('http://localhost:3001/addemployee',{\n      name:name,\n      age:age,\n      position:position,\n      country:country,\n      wage:wage,\n    }).then(()=>{\n      setEmployeesList([\n        ...employeesList,{\n          name:name,\n          age:age,\n          position:position,\n          country:country,\n          wage:wage,\n        },\n      ])\n    })\n  }\n  \n  const deletemployee = (id) => {\n    Axios.delete(`http://localhost:3001/deleteemployee/${id}`).then(()=>{\n      setEmployeesList(\n        employeesList.filter((val)=>{\n          return val.id ==! id\n        })\n      )\n    })\n  }\n\n setInterval(() => {\n    showemployees()\n  }, 3000)\n  \n\n  return (\n    <div className=\"App container\">\n    \n      <h1>Employeesystem</h1>\n\n      <form action=\"\">\n        \n        <div className=\"mb3\">\n        <label htmlFor=\"name\" className=\"form-label\">Name:</label>\n        <input type=\"text\" id=\"name\" className=\"form-control\" placeholder=\"INPUT NAME\" required onChange={(event)=>{\n          setName(event.target.value)\n        }}></input>\n        </div>\n\n        <div className=\"mb3\">\n        <label htmlFor=\"age\" className=\"form-label\">Age:</label>\n        <input type=\"number\" id=\"age\" className=\"form-control\" placeholder=\"INPUT AGE\" required onChange={(event =>{\n          setAge(event.target.value)\n        })}></input>\n        </div>\n\n        <div className=\"mb3\">\n        <label htmlFor=\"position\" className=\"form-label\">Positon:</label>\n        <input type=\"text\" id=\"posion\" className=\"form-control\" placeholder=\"INPUT POSITION\" required onChange={(event) => \n        setPosition(event.target.value)\n        }></input>\n        </div>\n\n        <div className=\"mb3\">\n        <label htmlFor=\"country\" className=\"form-label\">Country:</label>\n        <input type=\"text\" id=\"country\" className=\"form-control\" placeholder=\"INPUT COUNTRY\" required onChange={(event)=>{\n          setCountry(event.target.value)\n        }}></input>\n        </div>\n\n        <div className=\"mb3\">\n        <label htmlFor=\"wage\" className=\"form-label\">Wage:</label>\n        <input type=\"number\" id=\"wage\" className=\"form-control\" placeholder=\"INPUT WAGE\" required onChange={(event)=> {\n          setWage(event.target.value)\n        }}></input>\n        </div>\n        <br></br>\n        <button className=\"btn btn-success\" onClick={addemployees}>ADD EMPLOYEE</button>\n\n      </form>\n        <br></br>\n      <button className=\"btn btn-primary\" onClick={showemployees}>SHOW EMPLOYEES</button>\n      <br></br>\n      <br></br>\n      \n      \n      <h3>{message}</h3>\n        {employeesList.map((val,key)=> {\n          if(val.status === 0){\n            return(\n              <div className=\"container\">\n                <h3>{message}</h3>\n              </div>\n            )\n          }else{\n            return(\n              <div className=\"container\">\n                  <div className=\"card\" style={{width:\"18rem\"}}>\n                    <div className=\"card-body\">\n                      <p className=\"card-text\">Name: {val.emp_name}</p>\n                      <p className=\"card-text\">Age: {val.emp_age}</p>\n                      <p className=\"card-text\">Position: {val.emp_position}</p>\n                      <p className=\"card-text\">Country: {val.emp_country}</p>\n                      <p className=\"card-text\">Wage: {val.emp_wage}</p>\n                      <button className=\"btn btn-danger\" onClick={deletemployee(val.emp_id)}>DELETE</button>\n\n                    </div>\n                  </div>\n                  <br></br>\n                      <br></br>\n              </div>\n            )\n          }\n          })\n        \n        }\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}